PROTOC := protoc
PROTOC_GEN_GO := $(shell which protoc-gen-go)
PROTOC_GEN_GO_GRPC := $(shell which protoc-gen-go-grpc)
PROTO_DIR := proto
OUT_DIR := $(PROTO_DIR)/listwatcher
PROTO_PATHS := $(PROTO_DIR)

.PHONY: all build clean check install

all: check install build

check:
	@command -v $(PROTOC) >/dev/null 2>&1 || { echo "Error: protoc is not installed."; exit 1; }

install:
	@if [ -z "$(PROTOC_GEN_GO)" ]; then \
		echo "Installing protoc-gen-go..."; \
		go install google.golang.org/protobuf/cmd/protoc-gen-go@latest; \
	else \
		echo "protoc-gen-go is already installed."; \
	fi

	@if [ -z "$(PROTOC_GEN_GO_GRPC)" ]; then \
		echo "Installing protoc-gen-go-grpc..."; \
		go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest; \
	else \
		echo "protoc-gen-go-grpc is already installed."; \
	fi

build:
	@mkdir -p $(OUT_DIR)
	$(PROTOC) \
		--proto_path=$(PROTO_PATHS) \
		--go_out=$(OUT_DIR) --go_opt=paths=source_relative \
		--go-grpc_out=$(OUT_DIR) --go-grpc_opt=paths=source_relative \
		$(PROTO_DIR)/*.proto

clean:
	find $(OUT_DIR) -type f \( -name "*.pb.go" -o -name "*_grpc.pb.go" \) -delete
