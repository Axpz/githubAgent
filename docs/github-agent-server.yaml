# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: github-agent-config
# data:
#   GITHUB_WEBHOOK_SECRET: "mK2Lo/UeFJ2HfFo/97i8g="
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubectl-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubectl-clusterrole
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "jobs", "deployments"]
    verbs: ["create", "get", "list", "update", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create", "get", "list", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubectl-clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: kubectl-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: kubectl-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: github-agent-server
  labels:
    app: github-agent-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: github-agent-server
  template:
    metadata:
      labels:
        app: github-agent-server
    spec:
      serviceAccountName: kubectl-sa
      containers:
        - name: github-agent-server-container
          image: github-agent-server:v0.0.1
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: github-agent-config
---
apiVersion: v1
kind: Service
metadata:
  name: github-agent-server
spec:
  selector:
    app: github-agent-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: github-agent-server
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`74.121.149.207`) && PathPrefix(`/github`)
    services:
    - name: github-agent-server
      port: 80
